name: CI

on:
  push:
    branches: ["**"]
    paths-ignore:
      - docs/**
      - "**/*.md"
      - "**/*.adoc"
      - "**/*.txt"
      - "**/*.png"
      - "**/*.jpg"
      - "**/*.svg"
      - infra/**
  pull_request:
    branches: ["**"]
    paths-ignore:
      - docs/**
      - "**/*.md"
      - "**/*.adoc"
      - "**/*.txt"
      - "**/*.png"
      - "**/*.jpg"
      - "**/*.svg"
      - infra/**

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  docs_lint:
    name: Docs & config lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install markdown linters
        run: npm i -g markdownlint-cli markdownlint-cli2
      - name: Run docs lint script (non-blocking)
        continue-on-error: true
        run: |
          chmod +x scripts/lint_docs.sh
          STRICT_MARKDOWNLINT=true ./scripts/lint_docs.sh | tee docs_lint.log
      - uses: actions/upload-artifact@v4
        with:
          name: docs-lint-log
          path: docs_lint.log

  flutter:
    name: Unit+Widget (no coverage)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Cache Pub & tool dirs
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            **/.dart_tool
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Create dummy .env for CI
        run: printf "MODE=ci\n" > .env

      - name: Pub get
        run: flutter pub get

      - name: Analyze
        run: flutter analyze --no-fatal-infos lib test integration_test bin tool

      - name: Tests (fast, no coverage)
        run: |
          flutter test --no-pub --concurrency 4 --reporter expanded --exclude-tags slow

  functions:
    name: Cloud Functions â€“ unit & e2e
    runs-on: ubuntu-latest
    env:
      API_FOOTBALL_KEY: ${{ secrets.API_FOOTBALL_KEY }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: cloud_functions/package-lock.json
      - name: Install deps
        run: npm ci --prefix cloud_functions
      - name: Lint (non-blocking)
        run: npm run lint --prefix cloud_functions || true
      - name: Build
        run: npm run build --prefix cloud_functions
      - name: Run unit tests
        run: npm test --prefix cloud_functions

  firestore_rules:
    name: Firestore rules tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install Firebase CLI
        run: npm i -g firebase-tools
      - name: Run rules tests
        run: |
          chmod +x scripts/test_firebase_rules.sh
          ./scripts/test_firebase_rules.sh | tee security_rules_test.log
      - uses: actions/upload-artifact@v4
        with:
          name: security-rules-log
          path: security_rules_test.log

  terraform:
    name: Terraform fmt & validate
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
      - name: Init (no backend)
        run: terraform init -backend=false
      - name: Fmt check
        run: terraform fmt -check
      - name: Validate
        run: terraform validate -no-color
