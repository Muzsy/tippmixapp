name: Deploy Backend

on:
  push:
    branches: [dev, main]
  workflow_dispatch:
    inputs:
      target:
        description: "Deploy target (dev/prod)"
        required: false
        default: "dev"
        type: choice
        options:
          - dev
          - prod

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy-functions:
    name: Firebase Functions deploy
    runs-on: ubuntu-latest
    # Csak dev branch push esetén; prod csak manuális dispatch-csel fusson
    if: >-
      (github.event_name == 'push' && github.ref == 'refs/heads/dev') ||
      (github.event_name == 'workflow_dispatch' && inputs.target == 'dev')
    steps:
      - uses: actions/checkout@v4

      - name: Determine MODE (branch or input)
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TARGET="${{ inputs.target }}"
          else
            BR="${GITHUB_REF##*/}"
            if [ "$BR" = "main" ]; then TARGET="prod"; else TARGET="dev"; fi
          fi
          echo "MODE=$TARGET" >> $GITHUB_ENV
          echo "MODE=$TARGET"

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: |
            cloud_functions/package-lock.json

      - name: Install firebase-tools (pinned major)
        run: npm i -g firebase-tools@^13

      - name: Clean stale build artifacts
        run: rm -rf cloud_functions/lib

      - name: Install deps & build functions
        run: |
          npm ci --prefix cloud_functions
          npm run build --prefix cloud_functions
      # 1) ADC (Application Default Credentials) beállítása a SA JSON-ból
      - name: Google Auth (ADC)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      # 2) (Opció) gcloud felrakása és projekt beállítása – a Firebase CLI is ezt fogja látni
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 470.0.0'
      - name: Set gcloud project
        run: |
          if [ "$MODE" = "prod" ]; then
            gcloud config set core/project tippmix-prod
          else
            gcloud config set core/project tippmix-dev
          fi
          gcloud auth list

      - name: Firebase deploy – Firestore rules (dev only)
        if: env.MODE == 'dev'
        run: |
          PROJECT_ID="tippmix-dev"
          firebase deploy --only firestore:rules --project "$PROJECT_ID" --non-interactive

      - name: Firebase deploy (dev/main)
        run: |
          # Biztosítsuk, hogy mindig explicit projektet adunk meg
          if [ "$MODE" = "prod" ]; then
            PROJECT_ID="tippmix-prod"
          else
            PROJECT_ID="tippmix-dev"
          fi
          # Non-interactive mód kötelező CI-ben; ADC-t már beállította a google-github-actions/auth
          firebase deploy --only functions --project "$PROJECT_ID" --non-interactive

      - name: Terraform no-op plan
        run: |
          cd infra
          terraform init -backend=false
          terraform validate
          terraform plan -lock=false -input=false -no-color

  smoke-messageid-guard:
    name: Post-deploy smoke – messageId guard
    runs-on: ubuntu-latest
    needs: deploy-functions
    if: >-
      (github.event_name == 'push' && github.ref == 'refs/heads/dev') ||
      (github.event_name == 'workflow_dispatch' && inputs.target == 'dev')
    steps:
      - uses: actions/checkout@v4

      - name: Determine MODE (branch)
        run: |
          BR="${GITHUB_REF##*/}"
          if [ "$BR" = "main" ]; then TARGET="prod"; else TARGET="dev"; fi
          echo "MODE=$TARGET" >> $GITHUB_ENV
          echo "MODE=$TARGET"

      - name: Set up Node.js 20 (for function build in smoke script)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: cloud_functions/package-lock.json

      - name: Google Auth (ADC)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 470.0.0'

      - name: Set gcloud project
        run: |
          if [ "$MODE" = "prod" ]; then
            gcloud config set core/project tippmix-prod
            echo "PROJECT_ID=tippmix-prod" >> $GITHUB_ENV
          else
            gcloud config set core/project tippmix-dev
            echo "PROJECT_ID=tippmix-dev" >> $GITHUB_ENV
          fi
          gcloud auth list

      - name: Run deploy + smoke (gcloud deploy path)
        env:
          PROJECT_ID: ${{ env.PROJECT_ID }}
          REGION: europe-central2
          FUNCTION_NAME: match_finalizer
          TOPIC: projects/${{ env.PROJECT_ID }}/topics/result-check
          SERVICE_ACCOUNT: match-finalizer@${{ env.PROJECT_ID }}.iam.gserviceaccount.com
          DEPLOYER: gcloud
          MAX_ATTEMPTS: 2
        run: |
          chmod +x scripts/deploy_and_smoke_messageid_guard.sh
          ./scripts/deploy_and_smoke_messageid_guard.sh
