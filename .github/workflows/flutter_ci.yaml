name: flutter-ci

on: [push, pull_request]

jobs:
  build:
    name: Flutter CI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      # Flutter SDK with caching
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.8"
          cache: true

      # Node & Firebase CLI & markdownlint (needed for emulator & rules tests)
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Firebase CLI
        run: npm install -g firebase-tools
      
      - name: Install markdownlint-cli
        run: npm install -g markdownlint-cli

      # Install Dart/Flutter dependencies
      - name: Install project dependencies
        run: flutter pub get

      # Project bootstrap (custom Codex script)
      - name: Bootstrap Codex environment
        run: bash .codex/setup.sh

      # Ensure helper scripts are executable
      - name: Make scripts executable
        run: chmod +x scripts/*.sh

      # Pre‑commit checklist (lint ➜ tests ➜ coverage ➜ golden ➜ a11y ➜ integration)
      - name: Run pre‑commit checklist
        run: |
          ./scripts/lint_docs.sh
          ./scripts/precommit.sh

      # Upload coverage badge (run once on Linux)
      - name: Publish coverage badge
        if: matrix.os == 'ubuntu-latest'
        uses: whynotmake-it/dart-coverage-assistant@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          generate_badges: push

      # Android release build (Linux)
      - name: Build Android AAB
        if: matrix.os == 'ubuntu-latest'
        run: flutter build appbundle --release

      # iOS release build (macOS)
      - name: Build iOS IPA
        if: matrix.os == 'macos-latest'
        run: flutter build ipa --no-codesign

      # Firebase security rules tests (optional)
      - name: Test Firebase security rules
        if: matrix.os == 'ubuntu-latest' && hashFiles('scripts/test_firebase_rules.sh') != ''
        run: |
          firebase emulators:exec --only firestore "scripts/test_firebase_rules.sh"
