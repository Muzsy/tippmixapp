{
  "firebase_json_path": "firebase.json",
  "firebase_json": {
  "emulators": {
    "auth": { "port": 9099 },
    "firestore": { "port": 8080 },
    "storage": { "port": 9199 },
    "functions": { "port": 5001 },
    "ui": { "enabled": true, "port": 4000 },
    "singleProjectMode": true
  },
  "firestore": { "rules": "firebase.rules" },
  "storage":   { "rules": "storage.rules" },
  "functions": [
    {
      "codebase": "default",
      "source": "cloud_functions",
      "ignore": [
        "node_modules",
        ".git",
        "firebase-debug.log",
        "firebase-debug.*.log",
        "*.local"
      ]
    }
  ]
},
  "firebaserc_exists": true,
  "firebaserc_default": "3:tippmix-dev",
  "flutter_emulator_usage": "lib/bootstrap.dart:14:const bool kUseEmulator = bool.fromEnvironment('USE_EMULATOR', defaultValue: true);\nlib/bootstrap.dart:33:      final host = Platform.isAndroid ? '10.0.2.2' : 'localhost';\nlib/bootstrap.dart:34:      FirebaseFirestore.instance.useFirestoreEmulator(host, 8080);\nlib/bootstrap.dart:36:      await FirebaseAuth.instance.useAuthEmulator(host, 9099);\nlib/bootstrap.dart:37:      FirebaseFunctions.instanceFor(region: 'europe-central2').useFunctionsEmulator(host, 5001);\nlib/bootstrap.dart:38:      FirebaseStorage.instance.useStorageEmulator(host, 9199);\nlib/services/experiment_service.dart:44:    const bool useEmu = bool.fromEnvironment('USE_EMULATOR', defaultValue: true);",
  "functions_dir": "functions",
  "functions_engines_node": "1:20",
  "root_has_nvmrc": false,
  "functions_has_nvmrc": false,
  "root_has_tool_versions": false,
  "functions_has_tool_versions": false,
  "ios_info_plist_path": "ios/Runner/Info.plist",
  "ios_ats_present": "absent",
  "offline_script": "scripts/test_firebase_rules.sh",
  "readme_hits": "README.md:123:A GitHub Actions workflow runs `scripts/test_firebase_rules.sh` to start the Firebase Emulator\nREADME.md:160:- Env: export `USE_EMULATOR=true USE_MOCK_SCORES=true USE_INLINE_FINALIZER=true API_FOOTBALL_KEY=dummy`\nREADME.md:164:- Flutter run: `flutter run --dart-define=USE_EMULATOR=true`\nREADME.md:167:- Troubleshooting: Android cleartext enabled; Functions logs in Emulator UI; Auth REST users via `tools/create_test_users.sh`.\ndocs/README_hu.md:28:| Pub/Sub Topics                  | `pubsub_topics_en.md`              | `pubsub_topics_hu.md`              |\ndocs/README_hu.md:32:| E2E Ticket Flow Emulator       | `e2e_ticket_flow_emulator_en.md` | `e2e_ticket_flow_emulator.md`     |\ndocs/README_en.md:28:| Pub/Sub Topics                  | `pubsub_topics_en.md`              | `pubsub_topics_hu.md`              |\ndocs/README_en.md:32:| E2E Ticket Flow Emulator       | `e2e_ticket_flow_emulator_en.md` | `e2e_ticket_flow_emulator.md`     |\ndocs/architecture/architecture_overview_en.md:20:- **Firebase Emulator** \u2013 recommended for testing Firestore writes.\ndocs/architecture/architecture_overview_hu.md:20:- **Emul\u00e1tor** \u2013 tesztel\u00e9shez aj\u00e1nlott a Firebase Emulator haszn\u00e1lata.\ndocs/e2e_ticket_flow_emulator.md:1:# Emulatoros E2E \u2013 Ticket Flow (create \u2192 finalize \u2192 payout)\ndocs/e2e_ticket_flow_emulator.md:4:- Firebase Emulators: Firestore, Auth\ndocs/e2e_ticket_flow_emulator_en.md:1:# Emulator E2E \u2013 Ticket Flow (create \u2192 finalize \u2192 payout)\ndocs/e2e_ticket_flow_emulator_en.md:4:- Firebase Emulators: Firestore, Auth\ndocs/legacy/security_rules_ci.md:9:   (`npm ci --prefer-offline`), majd a Firestore Emulator inditasaval lefuttatja\ndocs/features/push_notification_strategy_en.md:51:- Firebase Emulator Suite for local testing\ndocs/backend/security_rules_hu.md:132:- Firebase Emulatorral szab\u00e1ly-tesztek \u00edr\u00e1sa\ndocs/features/leaderboard_logic_hu.md:24:Javasolt kollekci\u00f3:\ndocs/backend/security_rules_en.md:132:- Create rule unit tests via Firebase Emulator\ndocs/features/feed_module_plan_hu.md:23:## \ud83d\udcc1 Javasolt Firestore strukt\u00fara\ndocs/backend/match_finalizer_hu.md:7:H\u00e1tt\u00e9rfolyamat, amely a `result-check` Pub/Sub \u00fczeneteket dolgozza fel. Feladatai:\ndocs/backend/pubsub_topics_hu.md:5:# Pub/Sub t\u00e9m\u00e1k\ndocs/backend/pubsub_topics_hu.md:7:Terraform \u00e1ltal kezelt Google Pub/Sub t\u00e9m\u00e1k a m\u00e9rk\u0151z\u00e9s-ki\u00e9rt\u00e9kel\u0151 folyamathoz.\ndocs/features/badge_system_hu.md:26:Javasolt:\ndocs/features/push_notification_strategy_hu.md:51:- Firebase Emulator Suite helyi pr\u00f3b\u00e1hoz\ndocs/backend/pubsub_topics_en.md:5:# Pub/Sub Topics\ndocs/backend/pubsub_topics_en.md:7:Terraform-managed Google Pub/Sub topics for the result evaluation pipeline.\ndocs/backend/match_finalizer_en.md:7:Background worker processing `result-check` Pub/Sub messages. Its responsibilities:\ndocs/qa/offline_parity_report.md:6:Emulators\ndocs/screens/my_tickets/qa/test-plan.md:14:- Firestore Rules: olvas\u00e1si jogosults\u00e1g pozit\u00edv/negat\u00edv utak `users/{uid}/tickets` alatt (Emulator).\ndocs/screens/my_tickets/screen_spec.md:167:- Rules ellen\u0151rz\u00e9s: MyTickets olvas\u00e1si utak pozit\u00edv/negat\u00edv eseteinek b\u0151v\u00edt\u00e9se (Firestore Emulator; JS rules\u2011teszt mint\u00e1ra).\ndocs/ci-cd/github_actions_pipeline_hu.md:48:## \ud83e\uddf0 Javasolt eszk\u00f6z\u00f6k\ndocs/offline/offline_guide_hu_en.md:9:Ez a dokumentum l\u00e9p\u00e9sr\u0151l l\u00e9p\u00e9sre bemutatja, hogyan futtasd a Tipsterino\u2011t teljesen offline m\u00f3dban a Firebase Emulator Suite \u00e9s lok\u00e1lis mockok seg\u00edts\u00e9g\u00e9vel. Nem sz\u00fcks\u00e9ges internet vagy felh\u0151s er\u0151forr\u00e1s.\ndocs/offline/offline_guide_hu_en.md:12:- K\u00f6rnyezeti v\u00e1ltoz\u00f3k (dev): `USE_EMULATOR=true USE_MOCK_SCORES=true USE_INLINE_FINALIZER=true API_FOOTBALL_KEY=dummy`\ndocs/offline/offline_guide_hu_en.md:17:- Flutter SDK (stable), Java 17, Android SDK\ndocs/offline/offline_guide_hu_en.md:35:- Fut\u00e1s: `flutter run --dart-define=USE_EMULATOR=true`\ndocs/offline/offline_guide_hu_en.md:36:- Emulator k\u00f6t\u00e9s: Firestore/Auth/Functions/Storage lok\u00e1lis hostokra \u00e1ll\u00edtva (Android: `10.0.2.2`, m\u00e1s: `localhost`)\ndocs/offline/offline_guide_hu_en.md:39:- Build Guard: PROD projekt azonnal le\u00e1ll, ha `USE_EMULATOR=true`\ndocs/offline/offline_guide_hu_en.md:41:### Finalizer / Pub/Sub (halad\u00f3)\ndocs/offline/offline_guide_hu_en.md:42:- Inline m\u00f3d: `USE_INLINE_FINALIZER=true` eset\u00e9n a Callable azonnal futtatja a finalizert.\ndocs/offline/offline_guide_hu_en.md:43:- Dev \u201ePub/Sub emu\u201d v\u00e9gpontok:\ndocs/offline/offline_guide_hu_en.md:46:- Ha GCloud Pub/Sub emul\u00e1tort haszn\u00e1lsz: \u00e1ll\u00edtsd `PUBSUB_EMULATOR_HOST=localhost:8086`, majd futtasd a `gcloud beta emulators pubsub start`\u2011ot (opcion\u00e1lis).\ndocs/offline/offline_guide_hu_en.md:53:- Functions logok: Emulator UI\ndocs/offline/offline_guide_hu_en.md:61:This guide explains how to run Tipsterino fully offline using the Firebase Emulator Suite and local mocks. No internet or cloud resources required.\ndocs/offline/offline_guide_hu_en.md:63:- Emulator ports: Auth 9099, Firestore 8080, Storage 9199, Functions 5001, UI 4000\ndocs/offline/offline_guide_hu_en.md:64:- Dev env vars: `USE_EMULATOR=true USE_MOCK_SCORES=true USE_INLINE_FINALIZER=true API_FOOTBALL_KEY=dummy`\ndocs/offline/offline_guide_hu_en.md:69:- Flutter SDK (stable), Java 17, Android SDK\ndocs/offline/offline_guide_hu_en.md:76:### Start Emulators\ndocs/offline/offline_guide_hu_en.md:87:- Run: `flutter run --dart-define=USE_EMULATOR=true`\ndocs/offline/offline_guide_hu_en.md:88:- Emulator binding: Firestore/Auth/Functions/Storage to local hosts (Android: `10.0.2.2`, others: `localhost`)\ndocs/offline/offline_guide_hu_en.md:91:- Build Guard: aborts if PROD project with `USE_EMULATOR=true`\ndocs/offline/offline_guide_hu_en.md:93:### Finalizer / Pub/Sub (advanced)\ndocs/offline/offline_guide_hu_en.md:94:- Inline mode: with `USE_INLINE_FINALIZER=true`, the callable runs finalizer immediately.\ndocs/offline/offline_guide_hu_en.md:95:- Dev \"Pub/Sub emu\" endpoints:\ndocs/offline/offline_guide_hu_en.md:98:- If using the GCloud Pub/Sub emulator: set `PUBSUB_EMULATOR_HOST=localhost:8086` and run `gcloud beta emulators pubsub start` (optional).\ndocs/offline/offline_guide_hu_en.md:105:- Functions logs: Emulator UI\ndocs/offline/offline_guide_hu_en.md:114:- Emulators: `npm run emu:start` | Reset: `npm run emu:reset` | Export: `npm run emu:export`\ndocs/offline/offline_guide_hu_en.md:116:- Flutter: `flutter run --dart-define=USE_EMULATOR=true`\ndocs/frontend/remote_config_flag_matrix_en.md:8:- In offline (USE_EMULATOR=true), fetch is skipped in ExperimentService and local cached/default is used.\ndocs/emu_restore.md:1:# Emulator State Export/Restore\ndocs/emu_restore.md:10:- Client connects via `--dart-define=USE_EMULATOR=true`"
}
