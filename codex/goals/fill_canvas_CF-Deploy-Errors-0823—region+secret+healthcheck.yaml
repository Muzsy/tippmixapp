meta:
  canvas: CF-Deploy-Errors-0823—region+secret+healthcheck.md
  priority: P0

steps:
  - name: Bootstrap modul bevezetése a globális opciókhoz és secrethez
    description: |
      Hozz létre egy új `cloud_functions/global.ts` fájlt, amely **ELSŐKÉNT** beállítja a régiót és a secretet. Ezt a modult minden funkciómodul importálja majd (első importként), így elkerüljük az import‑sorrend miatti régiódriftet.

      **Új fájl – pontos tartalom:**
      ```diff
      --- /dev/null
      +++ b/cloud_functions/global.ts
      @@
      +import { setGlobalOptions } from 'firebase-functions/v2/options';
      +import { defineSecret } from 'firebase-functions/params';
      +
      +// Secret from Secret Manager (Console → Secret Manager → API_FOOTBALL_KEY)
      +export const API_FOOTBALL_KEY = defineSecret('API_FOOTBALL_KEY');
      +
      +// Global options for all v2 functions – region + secret binding
      +setGlobalOptions({ region: 'europe-central2', secrets: [API_FOOTBALL_KEY] });
      ```
    outputs:
      - cloud_functions/global.ts

  - name: index.ts – import sorrend rendezése és felesleges importok törlése
    description: |
      Az `index.ts` jelenleg **importál** más modulokat, és csak **utána** hívja meg a `setGlobalOptions`‑t. Vezesd be a `global.ts` importját, töröld a felesleges `defineSecret` importot és a lokális `setGlobalOptions` hívást. (A `match_finalizer` options már tartalmazza a `secrets` tömböt a buildelt kódban, ezért csak a bootstrapre van szükség.)

      **Egzakt diff:**
      ```diff
      --- a/cloud_functions/index.ts
      +++ b/cloud_functions/index.ts
      @@
      -import { setGlobalOptions } from 'firebase-functions/v2/options';
      -import { onMessagePublished } from 'firebase-functions/v2/pubsub';
      -import { defineSecret } from 'firebase-functions/params';
      +import './global';
      +import { onMessagePublished } from 'firebase-functions/v2/pubsub';
      +import { API_FOOTBALL_KEY } from './global';
       import * as logger from 'firebase-functions/logger';
       import { match_finalizer as matchFinalizerHandler } from './src/match_finalizer';
      @@
       export { onUserCreate, coin_trx } from './coin_trx.logic';
       // log_coin kivezetve (Step4) – végleges törléshez futtasd egyszer:
       // firebase functions:delete log_coin --region=europe-central2 --force
       export { onFriendRequestAccepted } from './friend_request';
       export { daily_bonus } from './src/daily_bonus';
       export { claim_daily_bonus } from './src/bonus_claim';
      
      -// Global options for all v2 functions
      -setGlobalOptions({ region: 'europe-central2' });
      +// Global options a global.ts‑ben kerül beállításra (régió + secretek)
      ```
    outputs:
      - cloud_functions/index.ts

  - name: V2 modulok – bootstrap import bevezetése
    description: |
      Add hozzá a `global.ts` importot **első** importként azokhoz a modulokhoz, ahol v2 triggert deklarálsz, hogy a régió/secretek beállítása biztosan megelőzze a trigger deklarációt.

      **Egzakt diff – daily_bonus.ts**
      ```diff
      --- a/cloud_functions/src/daily_bonus.ts
      +++ b/cloud_functions/src/daily_bonus.ts
      @@
      +import '../global';
       import { onSchedule } from 'firebase-functions/v2/scheduler';
       import * as logger from 'firebase-functions/logger';
       import { db } from './lib/firebase';
       import { CoinService } from './services/CoinService';
      ```

      **Egzakt diff – bonus_claim.ts**
      ```diff
      --- a/cloud_functions/src/bonus_claim.ts
      +++ b/cloud_functions/src/bonus_claim.ts
      @@
      +import '../global';
       import { onCall, HttpsError } from 'firebase-functions/v2/https';
       import { Timestamp } from 'firebase-admin/firestore';
       import { db } from './lib/firebase';
       import { CoinService } from './services/CoinService';
      ```

      **Egzakt diff – friend_request.ts**
      ```diff
      --- a/cloud_functions/friend_request.ts
      +++ b/cloud_functions/friend_request.ts
      @@
      +import './global';
       import { onDocumentUpdated } from 'firebase-functions/v2/firestore';
       import { FieldValue } from 'firebase-admin/firestore';
       import { db } from './src/lib/firebase';
      ```
    outputs:
      - cloud_functions/src/daily_bonus.ts
      - cloud_functions/src/bonus_claim.ts
      - cloud_functions/friend_request.ts

  - name: Auth trigger – v2 identity → v1 auth.onCreate (stabil)
    description: |
      A v2 `identity.onUserCreated` helyett v1 trigger használata. Ezzel kiküszöböljük az identity v2 inkompatibilitásokat, és a régiót a bootstrap garantálja a többi v2 funkciónál.

      **Egzakt diff:**
      ```diff
      --- a/cloud_functions/coin_trx.logic.ts
      +++ b/cloud_functions/coin_trx.logic.ts
      @@
      -import { onCall, HttpsError } from 'firebase-functions/v2/https';
      -import * as identity from 'firebase-functions/v2/identity';
      +import './global';
      +import { onCall, HttpsError } from 'firebase-functions/v2/https';
      +import * as functions from 'firebase-functions';
       import { FieldValue } from 'firebase-admin/firestore';
       import * as logger from 'firebase-functions/logger';
       import { db } from './src/lib/firebase';
       import { CoinService } from './src/services/CoinService';
      @@
      -export const onUserCreate = (identity as any).onUserCreated(async (event: any) => {
      -  const user = event.data;
      +export const onUserCreate = functions.auth.user().onCreate(async (user) => {
      ```
    outputs:
      - cloud_functions/coin_trx.logic.ts

  - name: Secret ütközés eltakarítása a meglévő Cloud Run szolgáltatáson
    description: |
      A `match-finalizer` szolgáltatáson töröld a korábban beégetett **nem‑secret** env változót, különben a secret‑binding update 400‑zal elhasal.

      **Parancsok:**
      ```bash
      gcloud run services update match-finalizer \
        --region=europe-central2 \
        --project=tippmix-dev \
        --update-env-vars API_FOOTBALL_KEY-
      ```
      
      Megjegyzés: ha több szolgáltatásban is be volt állítva a kulcs (pl. `coin-trx`, `daily-bonus`), futtasd végig ugyanezt a három névre is.
    outputs:
      - ops-log

  - name: Build + ellenőrzés
    description: |
      Buildeld a CF‑et, majd ellenőrizd, hogy nincs többé `us-central1` régióra utaló regisztráció a buildben, és a `v2/identity` import is eltűnt.

      ```bash
      cd cloud_functions
      npm ci
      npm run build
      # Gyors ellenőrzés
      if grep -R "firebase-functions/v2/identity" lib/ ; then echo "HIBA: v2 identity import maradt" && exit 1; fi
      if grep -R "us-central1" lib/ ; then echo "HIBA: us-central1 a buildben (régiódrift)" && exit 1; fi
      ```
      
      Hivatkozás a vászonra: `canvases/CF-Deploy-Errors-0823—region+secret+healthcheck.md`.
    outputs:
      - cloud_functions/lib/index.js
      - cloud_functions/lib/**/*.js

  - name: Deploy
    description: |
      A Secret ütközés eltakarítása után a deploynak le kell futnia.

      ```bash
      firebase deploy --only functions --project "$PROJECT_ID" --non-interactive --force
      ```
    outputs:
      - deploy-log
