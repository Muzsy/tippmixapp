# Codex YAML – H2H odds lekérés javítása (API‑Football)
# Kövesd a Codex Canvas Yaml Guide.pdf sémáját: csak steps:, minden lépés magyarul.

steps:
  - name: Előkészítés
    description: Ellenőrizzük a projektet és a tesztfuttatási környezetet.
    outputs:
      - Parancs futtatva: flutter --version
      - Parancs futtatva: flutter analyze
      - Parancs futtatva: dart --version

  - name: Helytelen bet paraméter javítása (1X2 → bet=1)
    description: Az API‑Football H2H (Match Winner) piac integer bet paramétert vár. Az eddigi "1X2" string hibát okoz. Cseréljük "1"‑re.
    inputs:
      - file: lib/services/api_football_service.dart
    outputs:
      - Kódrészlet cserélve: '&bet=1X2' → '&bet=1'
      - Kódrészlet cserélve: 'bet=1X2' → 'bet=1'

  - name: Felesleges per‑fixture odds hívások eltávolítása a lista betöltésből
    description: A fixtures lista aggregáló metódusából vegyük ki a H2H oddsok előtöltését. A listának csak a meccseket kell kérnie; a kártya tölti a H2H‑t szükség esetén.
    inputs:
      - file: lib/services/api_football_service.dart
    outputs:
      - Metódus módosítva: getOdds(...) nem hív getOddsForFixture(...)‑t a listaépítés közben
      - Megjegyzés a kódban: "H2H a kártyán töltődik, 60s cache"

  - name: Guard beépítése érvénytelen fixtureId ellen
    description: A getH2HForFixture(...) elején vezessünk be korai kilépést, ha fixtureId <= 0.
    inputs:
      - file: lib/services/api_football_service.dart
    outputs:
      - Kódrészlet hozzáadva: if (fixtureId <= 0) return null / Future.value(null)

  - name: 60 másodperces memóriacache H2H‑ra
    description: Azonos (fixtureId) hívás esetén 60 mp‑ig ugyanazt a Future‑t adjuk vissza, hogy rebuild/scroll ne indítson új kérést.
    inputs:
      - file: lib/services/api_football_service.dart
    outputs:
      - Mező hozzáadva: Map<int, _CachedH2H> _h2hCache
      - Struktúra: class _CachedH2H { final Future<OddsMarket?> f; final DateTime until; }
      - Logika: ha now < until → cache hit, különben friss hívás és cache frissítés

  - name: Tipkártya logika átrendezése (előbb lokális adat, aztán hálózat)
    description: Az event_bet_card a render előtt nézze meg az átadott event.bookmakers‑t; ha benne van a H2H (Match Winner), azt használja. Ha nincs, csak akkor indítson FutureBuilder‑t.
    inputs:
      - file: lib/widgets/event_bet_card.dart
    outputs:
      - Render sorrend módosítva; hálózati hívás csak hiány esetén
      - UI nem villog scroll közben

  - name: Unit tesztek frissítése – service URL és fallback
    description: Frissítsük/írjuk meg a minimális teszteket, hogy a regressziót elkerüljük.
    inputs:
      - file: test/services/api_football_service_odds_url_test.dart
      - file: test/services/api_football_service_odds_fallback_test.dart
    outputs:
      - Teszt: H2H kérésnél query['bet'] == '1'
      - Teszt: üres H2H válasznál második hívás bet nélkül, kliens oldali szűrés

  - name: Widget teszt – kártya hálózati hívás nélkül, ha adat adott
    description: Ha az event már tartalmaz H2H‑t, a kártya nem indít hálózati hívást; ha nincs, indít és megjeleníti az 1‑X‑2 gombokat.
    inputs:
      - file: test/widgets/event_bet_card_h2h_render_test.dart
    outputs:
      - Golden/assert teszt lefedi a két fő ágat (adat adott / adat hiányzik)

  - name: Build és ellenőrzések
    description: Futtassuk a kötelező ellenőrzéseket.
    outputs:
      - Parancs futtatva: flutter analyze
      - Parancs futtatva: flutter test

  - name: Rövid changelog
    description: Hozzunk létre egy rövid fejlesztői jegyzetet a változásokról a /docs alá.
    outputs:
      - Fájl: docs/h2h_odds_fetch_fix.md (összefoglaló a módosításokról, hatásokról)
