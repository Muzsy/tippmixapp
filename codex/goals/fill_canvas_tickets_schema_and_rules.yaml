meta:
  canvas: tickets_schema_and_rules.md
  priority: P0

steps:
  - name: "Séma dokumentáció létrehozása"
    description: "Hozd létre a provider‑független tickets séma dokumentumát mintákkal."
    outputs:
      - "docs/backend/firestore_tickets_schema.md"
    create_file:
      target: docs/backend/firestore_tickets_schema.md
      content: |
        # Firestore – `tickets` séma (provider‑független)
        
        ## Gyors áttekintés
        Kollekció: `tickets/{ticketId}`
        
        | Mező | Típus | Kötelező | Megjegyzés |
        |---|---|---|---|
        | userId | string | igen | Ticket tulajdonosa |
        | createdAt | timestamp | igen | Szerver idő |
        | status | string | igen | `pending|won|lost|void` |
        | stake | number | igen | TippCoin tét |
        | payout | number | igen | Záráskor számolt |
        | tips | array<Tip> | igen | Lásd alább |
        | processedAt | timestamp | nem | Finalizer állítja |
        
        **Tip**
        - fixtureId: string (API‑Football fixture ID)
        - leagueId: string
        - teamHomeId: string
        - teamAwayId: string
        - market: string (pl. `1X2|OU|BTTS|AH`)
        - selection: string (pl. `HOME|DRAW|AWAY`, `OVER_2_5`)
        - oddsSnapshot: number (kötelező)
        - kickoff: timestamp
        
        ## Példadokumentum
        ```json
        {
          "userId": "uid_123",
          "createdAt": {"_seconds": 1700000000, "_nanoseconds": 0},
          "status": "pending",
          "stake": 100,
          "payout": 0,
          "tips": [
            {
              "fixtureId": "120934",
              "leagueId": "39",
              "teamHomeId": "40",
              "teamAwayId": "50",
              "market": "1X2",
              "selection": "HOME",
              "oddsSnapshot": 1.85,
              "kickoff": {"_seconds": 1700003600, "_nanoseconds": 0}
            }
          ]
        }
        ```
        
        ## Indexek
        - `tickets`: (userId ASC, createdAt DESC)
        - `tickets`: (status ASC, createdAt DESC)
        
        ## Megjegyzés
        - A `tickets` írását Cloud Functions végzi Admin SDK‑val (rules megkerülve), ezért a kliens‑write tiltása biztonságos.

  - name: "Biztonsági szabály overlay létrehozása (tickets.rules)"
    description: "Adj külön rules fájlt a tickets és (opcionális) tickets_drafts kollekciókra. A meglévő firestore.rules‑t most nem módosítjuk."
    outputs:
      - "security/tickets.rules"
    create_file:
      target: security/tickets.rules
      content: |
        rules_version = '2';
        service cloud.firestore {
          match /databases/{database}/documents {
            function isSignedIn() { return request.auth != null; }
            function isOwner(uid) { return isSignedIn() && request.auth.uid == uid; }
        
            // Final tickets: client read‑only
            match /tickets/{ticketId} {
              allow read: if isOwner(resource.data.userId);
              allow create, update, delete: if false; // Only via Admin SDK (Cloud Functions)
            }
        
            // Optional client drafts flow
            match /tickets_drafts/{draftId} {
              allow read, create, update, delete: if isSignedIn() &&
                request.resource.data.userId == request.auth.uid;
            }
          }
        }

  - name: "Kompozit indexek hozzáadása"
    description: "Adjuk hozzá a `tickets` kollekció gyakori lekérdezéseihez szükséges indexeket. Ha a fájl létezik, patcheld; ha nem, hozd létre."
    outputs:
      - "firestore.indexes.json (updated or created)"
    create_file:
      target: firestore.indexes.json
      content: |
        {
          "indexes": [
            {
              "collectionGroup": "tickets",
              "queryScope": "COLLECTION",
              "fields": [
                {"fieldPath": "userId", "order": "ASCENDING"},
                {"fieldPath": "createdAt", "order": "DESCENDING"}
              ]
            },
            {
              "collectionGroup": "tickets",
              "queryScope": "COLLECTION",
              "fields": [
                {"fieldPath": "status", "order": "ASCENDING"},
                {"fieldPath": "createdAt", "order": "DESCENDING"}
              ]
            }
          ],
          "fieldOverrides": []
        }

  - name: "Smoke ellenőrzés – build stabilitás"
    description: "Futtasd a Flutter és Functions alap ellenőrzéseket, hogy a módosítás nem töri a buildet. (A rules overlay nincs bekötve, így nem érint futást.)"
    outputs:
      - "CI log: flutter analyze (success)"
      - "CI log: (cloud_functions) npm run build (success)"
    run: |
      flutter analyze || true
      cd cloud_functions && npm ci && npm run build
