version: 1
id: match-finalizer-v2-apifootball-secret-binding
summary: >-
  A Secret Managerből érkező API_FOOTBALL_KEY-t vezessük be a providerbe,
  és szüntessük meg a v1-es functions.config() fallbacket. A diffek a frissen feltöltött ZIP alapján készültek.
references:
  - canvas: canvases/match-finalizer-v2-apifootball-secret-binding.md
    note: Kontextus és elfogadási kritériumok.

steps:
  - name: ApiFootballResultProvider – v1 config eltávolítása, ENV alapértelmezés
    description: A provider ne importálja a firebase-functions-t, a konstruktor ENV-ből olvasson.
    changes:
      - file: cloud_functions/src/services/ApiFootballResultProvider.ts
        diff: |
          --- a/cloud_functions/src/services/ApiFootballResultProvider.ts
          +++ b/cloud_functions/src/services/ApiFootballResultProvider.ts
          @@ -1,6 +1,6 @@
           // Lightweight API-Football provider
           // Node 18+ global fetch; no extra deps required
-          import * as functions from 'firebase-functions';
+          // v2 alatt ne használj functions.config()-ot; Secret/ENV használata
           
           export interface ScoreResult {
             id: string;
             sport_key: string;
             completed: boolean;
             scores?: { home: number; away: number };
             home_team?: string;
             away_team?: string;
             winner?: string;
           }
           
           export class ApiFootballResultProvider {
             private readonly baseUrl = 'https://v3.football.api-sports.io';
           @@
-            constructor(
-              apiKey =
-                (process.env.API_FOOTBALL_KEY || functions.config().apifootball?.key) ??
-                '',
-            ) {
-              this.apiKey = apiKey;
-            }
+            constructor(
+              apiKey = process.env.API_FOOTBALL_KEY ?? '',
+            ) {
+              this.apiKey = apiKey;
+            }

  - name: match_finalizer – Secret átadása a providernek
    description: A Secret Manager paramétert a global.ts-ből importáljuk és átadjuk a providernek.
    changes:
      - file: cloud_functions/src/match_finalizer.ts
        diff: |
          --- a/cloud_functions/src/match_finalizer.ts
          +++ b/cloud_functions/src/match_finalizer.ts
          @@ -1,12 +1,15 @@
            import {
              ApiFootballResultProvider,
              findFixtureIdByMeta,
            } from "./services/ApiFootballResultProvider";
            import { calcTicketPayout } from "./tickets/payout";
            import { getFirestore } from "firebase-admin/firestore";
            import * as logger from "firebase-functions/logger";
            import { db } from "./lib/firebase";
            import { PubSub } from "@google-cloud/pubsub";
            import { CoinService } from "./services/CoinService";
            import { getEvaluator, NormalizedResult } from "./evaluators";
+           import { API_FOOTBALL_KEY } from "../global";
           
-           const provider = new ApiFootballResultProvider();
+           const provider = new ApiFootballResultProvider(
+             API_FOOTBALL_KEY.value() || process.env.API_FOOTBALL_KEY || ''
+           );
           
            const pubsub = new PubSub();
            const RESULT_TOPIC = process.env.RESULT_TOPIC || "result-check";

  - name: (opcionális) .runtimeconfig.json eltávolítása
    description: v2-ben nincs szükség a v1-es runtime config fájlra.
    changes:
      - file: cloud_functions/.runtimeconfig.json
        delete: true

post_steps:
  - name: Secret hozzáférés biztosítása a service accounthoz
    shell: |
      PROJECT=tippmix-dev
      SA="match-finalizer@${PROJECT}.iam.gserviceaccount.com"
      gcloud secrets add-iam-policy-binding API_FOOTBALL_KEY \
        --member="serviceAccount:${SA}" \
        --role="roles/secretmanager.secretAccessor"
  - name: Build & Deploy (Gen2, Pub/Sub)
    shell: |
      cd cloud_functions
      npm ci || npm i
      npm run build
      gcloud functions deploy match_finalizer \
        --gen2 --region=europe-central2 --runtime=nodejs20 \
        --trigger-topic=result-check \
        --entry-point=match_finalizer \
        --service-account=match-finalizer@tippmix-dev.iam.gserviceaccount.com \
        --set-env-vars RESULT_TOPIC=result-check,DLQ_TOPIC=result-check-dlq,LOG_EXECUTION_ID=true \
        --quiet
  - name: Teszt üzenet + log ellenőrzés
    shell: |
      gcloud pubsub topics publish projects/tippmix-dev/topics/result-check \
        --message='{"job":"final-sweep","test":true}'
      gcloud functions logs read match_finalizer \
        --region=europe-central2 --gen2 --limit=50 \
        --start-time="$(date -u -d '15 minutes ago' +%Y-%m-%dT%H:%M:%SZ)"
