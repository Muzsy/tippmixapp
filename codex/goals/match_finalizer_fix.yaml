name: "Match Finalizer – Deploy fix (Node20, IAM, CI/CD)"
owner: "codex"
description: "A match_finalizer Cloud Function 2nd gen deploy javítása Node.js 20-ra, IAM/Artifact Registry/PubSub jogosultságok rendezése, és CI/CD minimális patchek alkalmazása."

steps:
  - name: Ellenőrzés – belépési pont és build beállítások
    description: |
      Ellenőrizd, hogy a cloud_functions/index.ts exportálja a `match_finalizer` handlert.
      A package.json `main` értéke `lib/index.js`, engines tartalmazza a `node >=20`-t.
      A tsconfig.json `outDir` = `lib`, `exclude` tartalmazza a `test`-et, `skipLibCheck: true`.
    outputs:
      - "cloud_functions/index.ts (export const match_finalizer = ...)"
      - "cloud_functions/package.json (main, engines, scripts)"
      - "cloud_functions/tsconfig.json (outDir, exclude, skipLibCheck)"

  - name: API-k engedélyezése
    description: |
      Engedélyezd a szükséges GCP API-kat: Cloud Run, Eventarc, Artifact Registry, Cloud Build, Pub/Sub.
      (gcloud services enable run.googleapis.com eventarc.googleapis.com artifactregistry.googleapis.com cloudbuild.googleapis.com pubsub.googleapis.com)
    outputs:
      - "API-k enabled"

  - name: IAM – Cloud Build ↔ Artifact Registry jogok
    description: |
      Add meg a ${PROJECT_NUMBER}@cloudbuild.gserviceaccount.com fióknak a `roles/artifactregistry.reader` és `roles/artifactregistry.writer` szerepkört a gcf-artifacts repo-ra (europe-west1).
    outputs:
      - "Artifact Registry reader/writer granted"

  - name: Deploy Node.js 20 runtime-on
    description: |
      Futtasd a deployt Node.js 20-szal a dev projektbe: `gcloud functions deploy match_finalizer --runtime=nodejs20 --trigger-topic=result-check --env-vars-file=/tmp/env.yaml --region=europe-west1 --quiet`.
      Siker esetén a Pub/Sub SA automatikusan létrejön.
    outputs:
      - "match_finalizer deployed (dev)"

  - name: IAM – Pub/Sub token creator szerepkör
    description: |
      A deploy után add meg a rejtett service accountnak a `roles/iam.serviceAccountTokenCreator` szerepkört:
      `service-${PROJECT_NUMBER}@gcp-sa-pubsub.iam.gserviceaccount.com`.
    outputs:
      - "Token Creator granted to gcp-sa-pubsub SA"

  - name: CI/CD – deploy.yml minimális patch
    description: |
      A deploy workflow-ban használj `google-github-actions/auth@v2`-t a FIREBASE_SERVICE_ACCOUNT secrethez, állíts be non-interactive deploy-t, és opcionálisan configold a gcloud projectet.
    outputs:
      - ".github/workflows/deploy.yml frissítve (ADC + non-interactive)"

  - name: CI – `.env` pótlás és functions build
    description: |
      A CI workflow-ban a Flutter analyze elé szúrj be egy lépést, ami létrehoz egy minimális `.env`-et. A `cloud_functions` jobban `npm test` helyett `lint || true` + `build` fusson.
    outputs:
      - ".github/workflows/ci.yaml frissítve (.env + lint/build)"

  - name: Manuális funkcionális teszt
    description: |
      Hozz létre egy pending ticketet a Firestore-ban, küldj Pub/Sub üzenetet a `result-check` topicra, ellenőrizd a logokat és a wallet frissülését. A lépések a vászonban vannak.
    outputs:
      - "Ticket lezárva, wallet frissítve (dev)"