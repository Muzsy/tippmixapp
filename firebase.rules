rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isOwner(uid) {
      return request.auth != null && request.auth.uid == uid;
    }

    match /coin_logs/{logId} {
      allow create: if isOwner(request.resource.data.userId)
        && request.resource.data.amount is int
        && (request.resource.data.type in ['debit', 'credit'])
        && request.resource.data.timestamp == request.time
        && request.resource.data.transactionId is string
        && request.resource.data.reason is string;
      allow read: if isOwner(resource.data.userId);
      allow update, delete: if false;
    }

    match /users/{uid} {
      allow read: if isOwner(uid);
      allow create, update: if isOwner(uid)
        && (!(
          'coinResetFlag' in request.resource.data ||
          'role' in request.resource.data
        ) || request.auth.token.role == 'admin');
      allow delete: if false;
    }

    match /users/{uid}/badges/{badgeId} {
      allow read: if isOwner(uid);
      allow create: if isOwner(uid)
        && request.resource.data.key is string
        && request.resource.data.timestamp == request.time;
      allow update, delete: if false;
    }
  }
}

